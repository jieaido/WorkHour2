@using System.Security.Principal
@model Model.WorkTime
@* todo 草泥马,放哪都不中,就这行,多选框真几把傻逼.草
  多选框的js要放到前面.草    *@

@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/bootstrap")
<script src="~/Scripts/bootstrap-multiselect.js"></script>
@{
    ViewBag.Title = "Create";
    Layout = null;
}

<h2>Create</h2>

<script type="text/javascript">
    
    $(function () {
      
        $('#example-getting-started').multiselect();
    
    });
       
   
</script>

	


@using (Ajax.BeginForm("Create",new AjaxOptions()
{
    HttpMethod = "post",
    OnSuccess = "onsuccess"
}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal ">
        
      
            <button type="button" style="width:200px" class="btn btn-success " >保存</button>

            <button type="button" style="width:200px"class="btn btn-danger " onclick="ondel()">删除</button>

         <h4>WorkTime</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @*<div class="form-group col-md-6">
            @Html.LabelFor(model => model.MemberID, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.MemberID, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.MemberID, "", new {@class = "text-danger"})
            </div>

        </div>*@

        <div class="form-group ">
            @Html.LabelFor(model => model.StationID, "StationID", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("StationID", null, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.StationID, "", new {@class = "text-danger"})
            </div>

        </div>



      
        <select id="example-getting-started" multiple="multiple">
            <option value="cheese">Cheese</option>
            <option value="tomatoes">Tomatoes</option>
            <option value="mozarella">Mozzarella</option>
            <option value="mushrooms">Mushrooms</option>
            <option value="pepperoni">Pepperoni</option>
            <option value="onions">Onions</option>
        </select>



        @*<div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTime, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StartTime, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group" style="width: 120px">
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndTime, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.EndTime, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.WorkProgram, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.WorkProgram, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.WorkProgram, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Remarks, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.WorkTimeValue, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.WorkTimeValue, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.WorkTimeValue, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SubTime, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.SubTime, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.SubTime, "", new {@class = "text-danger"})
            </div>
        </div>
      
        <div class="form-group">
            @Html.LabelFor(model => model.isDel, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.isDel, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.isDel, "", new {@class = "text-danger"})
            </div>
        </div>*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit"  value="Create" class="btn btn-primary"/>
            </div>
        </div>
    </div>
}



@section Scripts {


}
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
